// Code generated by protoc-gen-go. DO NOT EDIT.
// source: response.proto

package sturdyengine

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Response struct {
	Error                *Error             `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Results              []*ProcedureResult `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_response_0fb5352412767b64, []int{0}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Response) GetResults() []*ProcedureResult {
	if m != nil {
		return m.Results
	}
	return nil
}

type ProcedureResult struct {
	Error                *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProcedureResult) Reset()         { *m = ProcedureResult{} }
func (m *ProcedureResult) String() string { return proto.CompactTextString(m) }
func (*ProcedureResult) ProtoMessage()    {}
func (*ProcedureResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_response_0fb5352412767b64, []int{1}
}
func (m *ProcedureResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcedureResult.Unmarshal(m, b)
}
func (m *ProcedureResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcedureResult.Marshal(b, m, deterministic)
}
func (dst *ProcedureResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcedureResult.Merge(dst, src)
}
func (m *ProcedureResult) XXX_Size() int {
	return xxx_messageInfo_ProcedureResult.Size(m)
}
func (m *ProcedureResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcedureResult.DiscardUnknown(m)
}

var xxx_messageInfo_ProcedureResult proto.InternalMessageInfo

func (m *ProcedureResult) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ProcedureResult) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type Error struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	StackTrace           string   `protobuf:"bytes,4,opt,name=stack_trace,json=stackTrace,proto3" json:"stack_trace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_response_0fb5352412767b64, []int{2}
}
func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (dst *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(dst, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *Error) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Error) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Error) GetStackTrace() string {
	if m != nil {
		return m.StackTrace
	}
	return ""
}

type Status struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	BytesRead            uint64   `protobuf:"varint,2,opt,name=bytes_read,json=bytesRead,proto3" json:"bytes_read,omitempty"`
	BytesWritten         uint64   `protobuf:"varint,3,opt,name=bytes_written,json=bytesWritten,proto3" json:"bytes_written,omitempty"`
	BytesReadRate        float32  `protobuf:"fixed32,4,opt,name=bytes_read_rate,json=bytesReadRate,proto3" json:"bytes_read_rate,omitempty"`
	BytesWrittenRate     float32  `protobuf:"fixed32,5,opt,name=bytes_written_rate,json=bytesWrittenRate,proto3" json:"bytes_written_rate,omitempty"`
	RpcsExecuted         uint64   `protobuf:"varint,6,opt,name=rpcs_executed,json=rpcsExecuted,proto3" json:"rpcs_executed,omitempty"`
	RpcRate              float32  `protobuf:"fixed32,7,opt,name=rpc_rate,json=rpcRate,proto3" json:"rpc_rate,omitempty"`
	OneRpcPerUpdate      bool     `protobuf:"varint,8,opt,name=one_rpc_per_update,json=oneRpcPerUpdate,proto3" json:"one_rpc_per_update,omitempty"`
	MaxTimePerUpdate     uint32   `protobuf:"varint,9,opt,name=max_time_per_update,json=maxTimePerUpdate,proto3" json:"max_time_per_update,omitempty"`
	AdaptiveRateControl  bool     `protobuf:"varint,10,opt,name=adaptive_rate_control,json=adaptiveRateControl,proto3" json:"adaptive_rate_control,omitempty"`
	BlockingRecv         bool     `protobuf:"varint,11,opt,name=blocking_recv,json=blockingRecv,proto3" json:"blocking_recv,omitempty"`
	RecvTimeout          uint32   `protobuf:"varint,12,opt,name=recv_timeout,json=recvTimeout,proto3" json:"recv_timeout,omitempty"`
	TimePerRpcUpdate     float32  `protobuf:"fixed32,13,opt,name=time_per_rpc_update,json=timePerRpcUpdate,proto3" json:"time_per_rpc_update,omitempty"`
	PollTimePerRpcUpdate float32  `protobuf:"fixed32,14,opt,name=poll_time_per_rpc_update,json=pollTimePerRpcUpdate,proto3" json:"poll_time_per_rpc_update,omitempty"`
	ExecTimePerRpcUpdate float32  `protobuf:"fixed32,15,opt,name=exec_time_per_rpc_update,json=execTimePerRpcUpdate,proto3" json:"exec_time_per_rpc_update,omitempty"`
	StreamRpcs           uint32   `protobuf:"varint,16,opt,name=stream_rpcs,json=streamRpcs,proto3" json:"stream_rpcs,omitempty"`
	StreamRpcsExecuted   uint64   `protobuf:"varint,17,opt,name=stream_rpcs_executed,json=streamRpcsExecuted,proto3" json:"stream_rpcs_executed,omitempty"`
	StreamRpcRate        float32  `protobuf:"fixed32,18,opt,name=stream_rpc_rate,json=streamRpcRate,proto3" json:"stream_rpc_rate,omitempty"`
	TimePerStreamUpdate  float32  `protobuf:"fixed32,19,opt,name=time_per_stream_update,json=timePerStreamUpdate,proto3" json:"time_per_stream_update,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_response_0fb5352412767b64, []int{3}
}
func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (dst *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(dst, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Status) GetBytesRead() uint64 {
	if m != nil {
		return m.BytesRead
	}
	return 0
}

func (m *Status) GetBytesWritten() uint64 {
	if m != nil {
		return m.BytesWritten
	}
	return 0
}

func (m *Status) GetBytesReadRate() float32 {
	if m != nil {
		return m.BytesReadRate
	}
	return 0
}

func (m *Status) GetBytesWrittenRate() float32 {
	if m != nil {
		return m.BytesWrittenRate
	}
	return 0
}

func (m *Status) GetRpcsExecuted() uint64 {
	if m != nil {
		return m.RpcsExecuted
	}
	return 0
}

func (m *Status) GetRpcRate() float32 {
	if m != nil {
		return m.RpcRate
	}
	return 0
}

func (m *Status) GetOneRpcPerUpdate() bool {
	if m != nil {
		return m.OneRpcPerUpdate
	}
	return false
}

func (m *Status) GetMaxTimePerUpdate() uint32 {
	if m != nil {
		return m.MaxTimePerUpdate
	}
	return 0
}

func (m *Status) GetAdaptiveRateControl() bool {
	if m != nil {
		return m.AdaptiveRateControl
	}
	return false
}

func (m *Status) GetBlockingRecv() bool {
	if m != nil {
		return m.BlockingRecv
	}
	return false
}

func (m *Status) GetRecvTimeout() uint32 {
	if m != nil {
		return m.RecvTimeout
	}
	return 0
}

func (m *Status) GetTimePerRpcUpdate() float32 {
	if m != nil {
		return m.TimePerRpcUpdate
	}
	return 0
}

func (m *Status) GetPollTimePerRpcUpdate() float32 {
	if m != nil {
		return m.PollTimePerRpcUpdate
	}
	return 0
}

func (m *Status) GetExecTimePerRpcUpdate() float32 {
	if m != nil {
		return m.ExecTimePerRpcUpdate
	}
	return 0
}

func (m *Status) GetStreamRpcs() uint32 {
	if m != nil {
		return m.StreamRpcs
	}
	return 0
}

func (m *Status) GetStreamRpcsExecuted() uint64 {
	if m != nil {
		return m.StreamRpcsExecuted
	}
	return 0
}

func (m *Status) GetStreamRpcRate() float32 {
	if m != nil {
		return m.StreamRpcRate
	}
	return 0
}

func (m *Status) GetTimePerStreamUpdate() float32 {
	if m != nil {
		return m.TimePerStreamUpdate
	}
	return 0
}

func init() {
	proto.RegisterType((*Response)(nil), "sturdyengine.Response")
	proto.RegisterType((*ProcedureResult)(nil), "sturdyengine.ProcedureResult")
	proto.RegisterType((*Error)(nil), "sturdyengine.Error")
	proto.RegisterType((*Status)(nil), "sturdyengine.Status")
}

func init() { proto.RegisterFile("response.proto", fileDescriptor_response_0fb5352412767b64) }

var fileDescriptor_response_0fb5352412767b64 = []byte{
	// 564 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xcd, 0x6e, 0x13, 0x31,
	0x10, 0x56, 0xda, 0xfc, 0x4e, 0x92, 0xa6, 0x38, 0x05, 0x99, 0x43, 0x45, 0x48, 0xa5, 0x2a, 0x08,
	0xa8, 0x50, 0x2b, 0xc1, 0x03, 0xa0, 0xde, 0x2b, 0x37, 0x88, 0xe3, 0xca, 0xf5, 0x8e, 0xaa, 0x55,
	0x93, 0xb5, 0x35, 0xf6, 0x86, 0xf4, 0x79, 0x78, 0x51, 0xe4, 0xf1, 0xe6, 0xa7, 0x90, 0x0b, 0xb7,
	0xf8, 0xfb, 0x9b, 0x6f, 0x3d, 0x56, 0xe0, 0x84, 0xd0, 0x3b, 0x5b, 0x7a, 0xbc, 0x72, 0x64, 0x83,
	0x15, 0x03, 0x1f, 0x2a, 0xca, 0x9f, 0xb1, 0x7c, 0x2c, 0x4a, 0x9c, 0x96, 0xd0, 0x55, 0x35, 0x2f,
	0x3e, 0x40, 0x0b, 0x89, 0x2c, 0xc9, 0xc6, 0xa4, 0x31, 0xeb, 0x5f, 0x8f, 0xaf, 0xf6, 0x95, 0x57,
	0xb7, 0x91, 0x52, 0x49, 0x21, 0xbe, 0x41, 0x87, 0xd0, 0x57, 0x8b, 0xe0, 0xe5, 0xd1, 0xe4, 0x78,
	0xd6, 0xbf, 0x3e, 0x7f, 0x29, 0xbe, 0x23, 0x6b, 0x30, 0xaf, 0x08, 0x15, 0xab, 0xd4, 0x46, 0x3d,
	0x55, 0x30, 0xfa, 0x8b, 0xfb, 0x9f, 0xb1, 0x67, 0xd0, 0x5a, 0xe9, 0x45, 0x85, 0xf2, 0x68, 0xd2,
	0x98, 0x0d, 0x54, 0x3a, 0x4c, 0xd7, 0xd0, 0x62, 0x95, 0x90, 0xd0, 0xf1, 0x48, 0xab, 0xc2, 0x20,
	0x67, 0xf5, 0xd4, 0xe6, 0x28, 0x04, 0x34, 0x4b, 0xbd, 0x4c, 0xbe, 0x9e, 0xe2, 0xdf, 0x62, 0x02,
	0xfd, 0x1c, 0xbd, 0xa1, 0xc2, 0x85, 0xc2, 0x96, 0xf2, 0x98, 0xa9, 0x7d, 0x48, 0xbc, 0x83, 0xbe,
	0x0f, 0xda, 0x3c, 0x65, 0x81, 0xb4, 0x41, 0xd9, 0x64, 0x05, 0x30, 0x34, 0x8f, 0xc8, 0xf4, 0x77,
	0x1b, 0xda, 0xf7, 0x41, 0x87, 0xca, 0xc7, 0xd9, 0x2b, 0x24, 0x1f, 0x93, 0xea, 0xd9, 0xf5, 0x51,
	0x9c, 0x03, 0x3c, 0x3c, 0x07, 0xf4, 0x19, 0xa1, 0xce, 0xb9, 0x41, 0x53, 0xf5, 0x18, 0x51, 0xa8,
	0x73, 0x71, 0x01, 0xc3, 0x44, 0xff, 0xa2, 0x22, 0x04, 0x4c, 0x45, 0x9a, 0x6a, 0xc0, 0xe0, 0xcf,
	0x84, 0x89, 0x4b, 0x18, 0xed, 0x32, 0x32, 0xd2, 0x21, 0xb5, 0x39, 0x52, 0xc3, 0x6d, 0x90, 0xd2,
	0x01, 0xc5, 0x27, 0x10, 0x2f, 0xc2, 0x92, 0xb4, 0xc5, 0xd2, 0xd3, 0xfd, 0x44, 0x56, 0x5f, 0xc0,
	0x90, 0x9c, 0xf1, 0x19, 0xae, 0xd1, 0x54, 0x01, 0x73, 0xd9, 0x4e, 0xa3, 0x23, 0x78, 0x5b, 0x63,
	0xe2, 0x2d, 0x74, 0xc9, 0x99, 0x14, 0xd4, 0xe1, 0xa0, 0x0e, 0x39, 0xc3, 0xfe, 0x8f, 0x20, 0x6c,
	0x89, 0x59, 0xa4, 0x1d, 0x52, 0x56, 0xb9, 0x3c, 0x8a, 0xba, 0x93, 0xc6, 0xac, 0xab, 0x46, 0xb6,
	0x44, 0xe5, 0xcc, 0x1d, 0xd2, 0x0f, 0x86, 0xc5, 0x67, 0x18, 0x2f, 0xf5, 0x3a, 0x0b, 0xc5, 0x12,
	0xf7, 0xd5, 0xbd, 0x49, 0x63, 0x36, 0x54, 0xa7, 0x4b, 0xbd, 0x9e, 0x17, 0x4b, 0xdc, 0xc9, 0xaf,
	0xe1, 0xb5, 0xce, 0xb5, 0x0b, 0xc5, 0x0a, 0x79, 0x76, 0x66, 0x6c, 0x19, 0xc8, 0x2e, 0x24, 0x70,
	0xfc, 0x78, 0x43, 0xc6, 0x22, 0xdf, 0x13, 0xc5, 0x57, 0xb9, 0xb0, 0xe6, 0xa9, 0x28, 0x1f, 0x33,
	0x42, 0xb3, 0x92, 0x7d, 0xd6, 0x0e, 0x36, 0xa0, 0x42, 0xb3, 0x12, 0xef, 0x61, 0x10, 0x39, 0x2e,
	0x62, 0xab, 0x20, 0x07, 0x5c, 0xa0, 0x1f, 0xb1, 0x79, 0x82, 0x62, 0xd5, 0x6d, 0xcd, 0xf8, 0x71,
	0x75, 0xd5, 0x61, 0xba, 0xc6, 0x90, 0x7a, 0x2a, 0x67, 0xea, 0xaa, 0x5f, 0x41, 0x3a, 0xbb, 0x58,
	0x64, 0x87, 0x3c, 0x27, 0xec, 0x39, 0x8b, 0xfc, 0xfc, 0x80, 0x2f, 0xde, 0xfc, 0x41, 0xdf, 0x28,
	0xf9, 0x22, 0xff, 0x8f, 0x8f, 0x9f, 0x25, 0xa1, 0x5e, 0x46, 0x83, 0x97, 0xa7, 0xfc, 0x01, 0x90,
	0x20, 0xe5, 0x8c, 0x17, 0x5f, 0xe0, 0x6c, 0x4f, 0xb0, 0x5b, 0xef, 0x2b, 0x5e, 0xaf, 0xd8, 0x29,
	0xb7, 0x4b, 0xbe, 0x84, 0xd1, 0xce, 0x91, 0x76, 0x2d, 0xd2, 0xfb, 0xda, 0x8a, 0x79, 0xe3, 0x37,
	0xf0, 0x66, 0xdb, 0xb6, 0x36, 0xd4, 0x85, 0xc7, 0x2c, 0x1f, 0xd7, 0x97, 0x73, 0xcf, 0x5c, 0xea,
	0xfb, 0xd0, 0xe6, 0x3f, 0x9e, 0x9b, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xeb, 0xa1, 0xd0, 0xd5,
	0x8a, 0x04, 0x00, 0x00,
}
